{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ToolsLogOutput": {
				"properties": {
					"response": {
						"type": "string"
					}
				},
				"required": [
					"response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntryInfo": {
				"properties": {
					"isDir": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"isDir",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ListFilesystemDirResponse": {
				"properties": {
					"entries": {
						"items": {
							"$ref": "#/components/schemas/EntryInfo"
						},
						"type": "array"
					}
				},
				"required": [
					"entries"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReadFilesystemFileResponse": {
				"properties": {
					"content": {
						"type": "string"
					}
				},
				"required": [
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OutType.Stderr": {
				"enum": [
					"Stderr"
				],
				"type": "string"
			},
			"OutType": {
				"enum": [
					"Stdout",
					"Stderr"
				],
				"type": "string"
			},
			"OutStderrResponse": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/OutType.Stderr"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"line": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"timestamp",
					"line"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OutType.Stdout": {
				"enum": [
					"Stdout"
				],
				"type": "string"
			},
			"OutStdoutResponse": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/OutType.Stdout"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"line": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"timestamp",
					"line"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProcessResponse": {
				"properties": {
					"stderr": {
						"items": {
							"$ref": "#/components/schemas/OutStderrResponse"
						},
						"type": "array"
					},
					"stdout": {
						"items": {
							"$ref": "#/components/schemas/OutStdoutResponse"
						},
						"type": "array"
					},
					"processID": {
						"type": "string"
					},
					"finished": {
						"type": "boolean"
					}
				},
				"required": [
					"stderr",
					"stdout",
					"processID",
					"finished"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EnvVars": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object"
			},
			"StartProcessParams": {
				"properties": {
					"cmd": {
						"type": "string"
					},
					"envVars": {
						"$ref": "#/components/schemas/EnvVars"
					},
					"rootdir": {
						"type": "string"
					}
				},
				"required": [
					"cmd"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OpenPort": {
				"properties": {
					"State": {
						"type": "string"
					},
					"Ip": {
						"type": "string"
					},
					"Port": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"State",
					"Ip",
					"Port"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SessionResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"ports": {
						"items": {
							"$ref": "#/components/schemas/OpenPort"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"ports"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "playground",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/tools/logOutput": {
			"get": {
				"operationId": "WaitForLogOutput",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ToolsLogOutput"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "runID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionID}/filesystem/dir": {
			"get": {
				"operationId": "ListFilesystemDir",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListFilesystemDirResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "MakeFilesystemDir",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionID}/filesystem": {
			"delete": {
				"operationId": "DeleteFilesystemEntry",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sessions/{sessionID}/filesystem/file": {
			"get": {
				"operationId": "ReadFilesystemFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ReadFilesystemFileResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "WriteFilesystemFile",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"content": {
										"type": "string"
									}
								},
								"required": [
									"content"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/sessions/{sessionID}/processes": {
			"post": {
				"operationId": "StartProcess",
				"responses": {
					"200": {
						"description": "`processID` and all `stdout` and `stderr` that the process outputted until now.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProcessResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "if true the request will wait until the process ends and then return the `stdout`, `stderr` and `processID`.",
						"in": "query",
						"name": "wait",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/StartProcessParams"
							}
						}
					}
				}
			}
		},
		"/sessions/{sessionID}/processes/{processID}": {
			"delete": {
				"operationId": "StopProcess",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProcessResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "processID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "results",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"get": {
				"operationId": "GetProcess",
				"responses": {
					"200": {
						"description": "`processID` and all `stdout` and `stderr` that the process outputted until now.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProcessResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "processID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "if true the request will wait until the process ends and then return the `stdout`, `stderr` and `processID`.",
						"in": "query",
						"name": "wait",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/sessions/{sessionID}/processes/{processID}/stdin": {
			"post": {
				"operationId": "WriteProcessStdin",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "processID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"stdin": {
										"type": "string"
									}
								},
								"required": [
									"stdin"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/sessions": {
			"post": {
				"operationId": "CreateSessions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"envID": {
										"type": "string"
									}
								},
								"required": [
									"envID"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/sessions/{sessionID}": {
			"delete": {
				"operationId": "DeleteSession",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"get": {
				"operationId": "GetSession",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "https://localhost:49160/"
		}
	]
}