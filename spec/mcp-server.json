{
  "additionalProperties": false,
  "properties": {
    "airtable": {
      "required": [
        "airtableApiKey",
        "nodeenv"
      ],
      "additionalProperties": false,
      "properties": {
        "airtableApiKey": {
          "type": "string"
        },
        "nodeenv": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "aks": {
      "required": [
        "azureDir",
        "kubeconfig",
        "accessLevel"
      ],
      "additionalProperties": false,
      "properties": {
        "accessLevel": {
          "description": "Access level for the MCP server, One of [ readonly, readwrite, admin ]",
          "type": "string"
        },
        "additionalTools": {
          "description": "Comma-separated list of additional tools, One of [ helm, cilium ]",
          "type": "string"
        },
        "allowNamespaces": {
          "description": "Comma-separated list of namespaces to allow access to. If not specified, all namespaces are allowed.",
          "type": "string"
        },
        "azureDir": {
          "description": "Path to the Azure configuration directory (e.g. /home/azureuser/.azure). Used for Azure CLI authentication, you should be logged in (e.g. run `az login`) on the host before starting the MCP server.",
          "type": "string"
        },
        "containerUser": {
          "description": "Username or UID of the container user (format \u003cname|uid\u003e[:\u003cgroup|gid\u003e] e.g. 10000), ensuring correct permissions to access the Azure and kubeconfig files. Leave empty to use default user in the container.",
          "type": "string"
        },
        "kubeconfig": {
          "description": "Path to the kubeconfig file for the AKS cluster (e.g. /home/azureuser/.kube/config). Used to connect to the AKS cluster.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "apiGateway": {
      "required": [
        "api1HeaderAuthorization",
        "api1Name",
        "api1SwaggerUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "api1HeaderAuthorization": {
          "type": "string"
        },
        "api1Name": {
          "type": "string"
        },
        "api1SwaggerUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "apify": {
      "required": [
        "apifyToken",
        "tools"
      ],
      "additionalProperties": false,
      "properties": {
        "apifyToken": {
          "type": "string"
        },
        "tools": {
          "description": "Comma-separated list of tools to enable. Can be either a tool category, a specific tool, or an Apify Actor. For example: \"actors,docs,apify/rag-web-browser\". For more details visit https://mcp.apify.com.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "arxiv": {
      "required": [
        "storagePath"
      ],
      "additionalProperties": false,
      "properties": {
        "storagePath": {
          "description": "Directory path where downloaded papers will be stored",
          "type": "string"
        }
      },
      "type": "object"
    },
    "astGrep": {
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "astraDb": {
      "required": [
        "astraDbApplicationToken",
        "endpoint"
      ],
      "additionalProperties": false,
      "properties": {
        "astraDbApplicationToken": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "astroDocs": {
      "additionalProperties": false,
      "type": "object"
    },
    "atlan": {
      "required": [
        "apiKey",
        "baseUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "atlasDocs": {
      "required": [
        "apiUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "apiUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "atlassian": {
      "required": [
        "confluenceUrl",
        "jiraUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "confluenceApiToken": {
          "type": "string"
        },
        "confluencePersonalToken": {
          "type": "string"
        },
        "confluenceUrl": {
          "type": "string"
        },
        "confluenceUsername": {
          "type": "string"
        },
        "jiraApiToken": {
          "type": "string"
        },
        "jiraPersonalToken": {
          "type": "string"
        },
        "jiraUrl": {
          "type": "string"
        },
        "jiraUsername": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "audienseInsights": {
      "required": [
        "clientId"
      ],
      "additionalProperties": false,
      "properties": {
        "audienseClientSecret": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "twitterBearerToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "awsCdk": {
      "additionalProperties": false,
      "type": "object"
    },
    "awsCore": {
      "additionalProperties": false,
      "type": "object"
    },
    "awsDiagram": {
      "additionalProperties": false,
      "type": "object"
    },
    "awsDocumentation": {
      "additionalProperties": false,
      "type": "object"
    },
    "awsKbRetrievalServer": {
      "required": [
        "accessKeyId"
      ],
      "additionalProperties": false,
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "awsTerraform": {
      "additionalProperties": false,
      "type": "object"
    },
    "azure": {
      "additionalProperties": false,
      "type": "object"
    },
    "beagleSecurity": {
      "required": [
        "beagleSecurityApiToken"
      ],
      "additionalProperties": false,
      "properties": {
        "beagleSecurityApiToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "bitrefill": {
      "required": [
        "apiId"
      ],
      "additionalProperties": false,
      "properties": {
        "apiId": {
          "type": "string"
        },
        "apiSecret": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "box": {
      "required": [
        "clientId"
      ],
      "additionalProperties": false,
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "brave": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "buildkite": {
      "required": [
        "apiToken"
      ],
      "additionalProperties": false,
      "properties": {
        "apiToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "camunda": {
      "required": [
        "camundahost"
      ],
      "additionalProperties": false,
      "properties": {
        "camundahost": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "cdataConnectcloud": {
      "required": [
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "cdataPat": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "charmhealth": {
      "required": [
        "charmhealthApiKey",
        "charmhealthBaseUrl",
        "charmhealthClientId",
        "charmhealthClientSecret",
        "charmhealthRedirectUri",
        "charmhealthRefreshToken",
        "charmhealthTokenUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "charmhealthApiKey": {
          "type": "string"
        },
        "charmhealthBaseUrl": {
          "type": "string"
        },
        "charmhealthClientId": {
          "type": "string"
        },
        "charmhealthClientSecret": {
          "type": "string"
        },
        "charmhealthRedirectUri": {
          "type": "string"
        },
        "charmhealthRefreshToken": {
          "type": "string"
        },
        "charmhealthTokenUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "chroma": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "circleci": {
      "required": [
        "token",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "clickhouse": {
      "required": [
        "connectTimeout",
        "host",
        "password",
        "port",
        "secure",
        "sendReceiveTimeout",
        "user",
        "verify"
      ],
      "additionalProperties": false,
      "properties": {
        "connectTimeout": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "secure": {
          "type": "string"
        },
        "sendReceiveTimeout": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "verify": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "close": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "cloudRun": {
      "required": [
        "credentialsPath"
      ],
      "additionalProperties": false,
      "properties": {
        "credentialsPath": {
          "description": "path to application-default credentials (eg $HOME/.config/gcloud/application_default_credentials.json )",
          "type": "string"
        }
      },
      "type": "object"
    },
    "cloudflareDocs": {
      "additionalProperties": false,
      "type": "object"
    },
    "cockroachdb": {
      "required": [
        "caPath",
        "crdbPwd",
        "database",
        "host",
        "port",
        "sslCertfile",
        "sslKeyfile",
        "sslMode",
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "caPath": {
          "type": "string"
        },
        "crdbPwd": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "sslCertfile": {
          "type": "string"
        },
        "sslKeyfile": {
          "type": "string"
        },
        "sslMode": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "codeInterpreter": {
      "additionalProperties": false,
      "type": "object"
    },
    "context7": {
      "additionalProperties": false,
      "type": "object"
    },
    "couchbase": {
      "required": [
        "cbBucketName",
        "cbConnectionString",
        "cbMcpReadOnlyQueryMode",
        "cbPassword",
        "cbUsername"
      ],
      "additionalProperties": false,
      "properties": {
        "cbBucketName": {
          "description": "Bucket in the Couchbase cluster to use for the MCP server.",
          "type": "string"
        },
        "cbConnectionString": {
          "description": "Connection string for the Couchbase cluster.",
          "type": "string"
        },
        "cbMcpReadOnlyQueryMode": {
          "description": "Setting to \"true\" (default) enables read-only query mode while running SQL++ queries.",
          "type": "string"
        },
        "cbPassword": {
          "type": "string"
        },
        "cbUsername": {
          "description": "Username for the Couchbase cluster with access to the bucket.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "cyreslabAiShodan": {
      "required": [
        "shodanApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "shodanApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dappier": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dappierRemote": {
      "required": [
        "dappierRemoteApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "dappierRemoteApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dart": {
      "required": [
        "host",
        "token"
      ],
      "additionalProperties": false,
      "properties": {
        "host": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "databaseServer": {
      "required": [
        "databaseUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "databaseUrl": {
          "description": "Connection string for your database. Examples: SQLite: sqlite+aiosqlite:///data/mydb.db, PostgreSQL: postgresql+asyncpg://user:password@localhost:5432/mydb, MySQL: mysql+aiomysql://user:password@localhost:3306/mydb",
          "type": "string"
        }
      },
      "type": "object"
    },
    "databutton": {
      "additionalProperties": false,
      "type": "object"
    },
    "deepwiki": {
      "additionalProperties": false,
      "type": "object"
    },
    "descope": {
      "required": [
        "projectId"
      ],
      "additionalProperties": false,
      "properties": {
        "managementKey": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "desktopCommander": {
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "properties": {
        "paths": {
          "description": "List of directories that Desktop Commander can access",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "devhubCms": {
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "devhubApiKey": {
          "type": "string"
        },
        "devhubApiSecret": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "discord": {
      "required": [
        "discordToken"
      ],
      "additionalProperties": false,
      "properties": {
        "discordToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dockerhub": {
      "required": [
        "hubPatToken",
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "hubPatToken": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dodoPayments": {
      "required": [
        "dodoPaymentsApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "dodoPaymentsApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "dreamfactory": {
      "required": [
        "dreamfactoryapikey",
        "dreamfactoryurl"
      ],
      "additionalProperties": false,
      "properties": {
        "dreamfactoryapikey": {
          "type": "string"
        },
        "dreamfactoryurl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "duckduckgo": {
      "additionalProperties": false,
      "type": "object"
    },
    "dynatrace": {
      "required": [
        "oauthClientId",
        "oauthClientSecret",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "oauthClientId": {
          "type": "string"
        },
        "oauthClientSecret": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "e2b": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "edubase": {
      "required": [
        "app",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "app": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "effect": {
      "additionalProperties": false,
      "type": "object"
    },
    "elasticsearch": {
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "esApiKey": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "elevenlabs": {
      "required": [
        "data"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "everart": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "exa": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "explorium": {
      "required": [
        "apiAccessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "apiAccessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "fetch": {
      "additionalProperties": false,
      "type": "object"
    },
    "fibery": {
      "required": [
        "apiToken",
        "host"
      ],
      "additionalProperties": false,
      "properties": {
        "apiToken": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "filesystem": {
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "properties": {
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "findADomain": {
      "additionalProperties": false,
      "type": "object"
    },
    "firecrawl": {
      "required": [
        "apiKey",
        "creditCriticalThreshold",
        "creditWarningThreshold",
        "retryBackoffFactor",
        "retryDelay",
        "retryMax",
        "retryMaxDelay",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "creditCriticalThreshold": {
          "type": "integer"
        },
        "creditWarningThreshold": {
          "type": "integer"
        },
        "retryBackoffFactor": {
          "type": "integer"
        },
        "retryDelay": {
          "type": "integer"
        },
        "retryMax": {
          "type": "integer"
        },
        "retryMaxDelay": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "firewalla": {
      "required": [
        "boxId",
        "firewallaMspToken",
        "mspId"
      ],
      "additionalProperties": false,
      "properties": {
        "boxId": {
          "description": "Your Firewalla Box Global ID",
          "type": "string"
        },
        "firewallaMspToken": {
          "type": "string"
        },
        "mspId": {
          "description": "Your Firewalla MSP domain (e.g., yourdomain.firewalla.net)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "flexprice": {
      "required": [
        "apiKey",
        "baseUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "git": {
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "properties": {
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "github": {
      "required": [
        "personalAccessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "personalAccessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "githubChat": {
      "required": [
        "githubApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "githubApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "githubOfficial": {
      "required": [
        "githubPersonalAccessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "githubPersonalAccessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "gitlab": {
      "required": [
        "personalAccessToken",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "personalAccessToken": {
          "type": "string"
        },
        "url": {
          "description": "api url - optional for self-hosted instances",
          "type": "string"
        }
      },
      "type": "object"
    },
    "gitmcp": {
      "additionalProperties": false,
      "type": "object"
    },
    "glif": {
      "required": [
        "apiToken",
        "ids",
        "ignoredSaved"
      ],
      "additionalProperties": false,
      "properties": {
        "apiToken": {
          "type": "string"
        },
        "ids": {
          "type": "string"
        },
        "ignoredSaved": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "gmail": {
      "required": [
        "emailAddress"
      ],
      "additionalProperties": false,
      "properties": {
        "emailAddress": {
          "description": "Your Gmail email address",
          "type": "string"
        },
        "emailPassword": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "googleMaps": {
      "required": [
        "googleMapsApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "googleMapsApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "googleMapsComprehensive": {
      "required": [
        "googleMapsApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "googleMapsApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "grafana": {
      "required": [
        "apiKey",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "gyazo": {
      "required": [
        "accessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "accessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hackernews": {
      "additionalProperties": false,
      "type": "object"
    },
    "hackle": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "handwritingOcr": {
      "required": [
        "apiToken"
      ],
      "additionalProperties": false,
      "properties": {
        "apiToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hdx": {
      "required": [
        "appIdentifier"
      ],
      "additionalProperties": false,
      "properties": {
        "appIdentifier": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "heroku": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hostinger": {
      "required": [
        "apitoken"
      ],
      "additionalProperties": false,
      "properties": {
        "apitoken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hoverfly": {
      "required": [
        "data"
      ],
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hubspot": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "huggingFace": {
      "additionalProperties": false,
      "type": "object"
    },
    "hummingbot": {
      "required": [
        "apiUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "apiUrl": {
          "type": "string"
        },
        "hummingbotApiPassword": {
          "type": "string"
        },
        "hummingbotApiUsername": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "husqvarnaAutomower": {
      "required": [
        "clientId",
        "husqvarnaClientSecret"
      ],
      "additionalProperties": false,
      "properties": {
        "clientId": {
          "type": "string"
        },
        "husqvarnaClientSecret": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hyperbrowser": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "hyperspell": {
      "required": [
        "collection",
        "token",
        "useResources"
      ],
      "additionalProperties": false,
      "properties": {
        "collection": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "useResources": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "iaptic": {
      "required": [
        "appName"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "inspektorGadget": {
      "required": [
        "kubeconfig"
      ],
      "additionalProperties": false,
      "properties": {
        "gadgetImages": {
          "description": "Comma-separated list of gadget images (trace_dns, trace_tcp, etc) to use, allowing control over which gadgets are available as MCP tools",
          "type": "string"
        },
        "kubeconfig": {
          "description": "Path to the kubeconfig file for accessing Kubernetes clusters",
          "type": "string"
        }
      },
      "type": "object"
    },
    "javadocs": {
      "additionalProperties": false,
      "type": "object"
    },
    "jetbrains": {
      "required": [
        "port"
      ],
      "additionalProperties": false,
      "properties": {
        "port": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "kafkaSchemaReg": {
      "required": [
        "registryUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "registryUrl": {
          "description": "Schema Registry URL",
          "type": "string"
        },
        "schemaRegistryPassword": {
          "type": "string"
        },
        "schemaRegistryUser": {
          "type": "string"
        },
        "slimMode": {
          "description": "Enable SLIM_MODE for better performance",
          "type": "string"
        },
        "viewonly": {
          "description": "Enable read-only mode",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kagisearch": {
      "required": [
        "engine",
        "kagiApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "engine": {
          "type": "string"
        },
        "kagiApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "keboola": {
      "required": [
        "kbcStorageToken",
        "kbcWorkspaceSchema"
      ],
      "additionalProperties": false,
      "properties": {
        "kbcStorageToken": {
          "type": "string"
        },
        "kbcWorkspaceSchema": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "kong": {
      "required": [
        "konnectAccessToken",
        "region"
      ],
      "additionalProperties": false,
      "properties": {
        "konnectAccessToken": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubectl": {
      "required": [
        "kubeconfig"
      ],
      "additionalProperties": false,
      "properties": {
        "kubeconfig": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetes": {
      "required": [
        "configPath"
      ],
      "additionalProperties": false,
      "properties": {
        "configPath": {
          "description": "the path to the host .kube/config",
          "type": "string"
        }
      },
      "type": "object"
    },
    "lara": {
      "required": [
        "keyId"
      ],
      "additionalProperties": false,
      "properties": {
        "accessKeySecret": {
          "type": "string"
        },
        "keyId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "line": {
      "required": [
        "userId"
      ],
      "additionalProperties": false,
      "properties": {
        "channelAccessToken": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "linkedin": {
      "required": [
        "linkedinCookie",
        "userAgent"
      ],
      "additionalProperties": false,
      "properties": {
        "linkedinCookie": {
          "type": "string"
        },
        "userAgent": {
          "description": "Custom user agent string (optional, helps avoid detection and cookie login issues)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "llmtxt": {
      "additionalProperties": false,
      "type": "object"
    },
    "maestro": {
      "required": [
        "apiKeyApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKeyApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "manifold": {
      "additionalProperties": false,
      "type": "object"
    },
    "mapbox": {
      "required": [
        "accessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "accessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "mapboxDevkit": {
      "required": [
        "mapboxAccessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "mapboxAccessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "markdownify": {
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "properties": {
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "markitdown": {
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "properties": {
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "memory": {
      "additionalProperties": false,
      "type": "object"
    },
    "mercadoLibre": {
      "required": [
        "mercadoLibreApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "mercadoLibreApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "mercadoPago": {
      "required": [
        "mercadoPagoApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "mercadoPagoApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "metabase": {
      "required": [
        "apiKey",
        "metabaseurl",
        "metabaseusername",
        "password"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "metabaseurl": {
          "type": "string"
        },
        "metabaseusername": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "minecraftWiki": {
      "additionalProperties": false,
      "type": "object"
    },
    "mongodb": {
      "required": [
        "mdbMcpConnectionString"
      ],
      "additionalProperties": false,
      "properties": {
        "mdbMcpConnectionString": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "multiversxMx": {
      "required": [
        "network",
        "wallet"
      ],
      "additionalProperties": false,
      "properties": {
        "network": {
          "type": "string"
        },
        "wallet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "nasdaqDataLink": {
      "required": [
        "nasdaqDataLinkApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "nasdaqDataLinkApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "needle": {
      "required": [
        "needleApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "needleApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "neo4jCloudAuraApi": {
      "required": [
        "clientId"
      ],
      "additionalProperties": false,
      "properties": {
        "clientId": {
          "type": "string"
        },
        "neo4jAuraClientSecret": {
          "type": "string"
        },
        "serverAllowOrigins": {
          "type": "string"
        },
        "serverAllowedHosts": {
          "type": "string"
        },
        "serverHost": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        },
        "serverPort": {
          "type": "string"
        },
        "transport": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "neo4jCypher": {
      "required": [
        "url",
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "database": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "neo4jPassword": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "readTimeout": {
          "type": "string"
        },
        "responseTokenLimit": {
          "type": "string"
        },
        "serverAllowOrigins": {
          "type": "string"
        },
        "serverAllowedHosts": {
          "type": "string"
        },
        "serverHost": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        },
        "serverPort": {
          "type": "string"
        },
        "transport": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "neo4jDataModeling": {
      "required": [
        "serverAllowOrigins",
        "serverAllowedHosts",
        "serverHost",
        "serverPath",
        "serverPort",
        "transport"
      ],
      "additionalProperties": false,
      "properties": {
        "serverAllowOrigins": {
          "type": "string"
        },
        "serverAllowedHosts": {
          "type": "string"
        },
        "serverHost": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        },
        "serverPort": {
          "type": "string"
        },
        "transport": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "neo4jMemory": {
      "required": [
        "url",
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "database": {
          "type": "string"
        },
        "neo4jPassword": {
          "type": "string"
        },
        "serverAllowOrigins": {
          "type": "string"
        },
        "serverAllowedHosts": {
          "type": "string"
        },
        "serverHost": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        },
        "serverPort": {
          "type": "string"
        },
        "transport": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "neon": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "nodeCodeSandbox": {
      "additionalProperties": false,
      "type": "object"
    },
    "notion": {
      "required": [
        "internalIntegrationToken"
      ],
      "additionalProperties": false,
      "properties": {
        "internalIntegrationToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "novita": {
      "additionalProperties": false,
      "type": "object"
    },
    "npmSentinel": {
      "additionalProperties": false,
      "type": "object"
    },
    "obsidian": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "oktaMcpFctr": {
      "required": [
        "clientOrgurl"
      ],
      "additionalProperties": false,
      "properties": {
        "clientOrgurl": {
          "description": "Okta organization URL (e.g., https://dev-123456.okta.com)",
          "type": "string"
        },
        "concurrentLimit": {
          "description": "Maximum concurrent requests to Okta API",
          "type": "string"
        },
        "logLevel": {
          "description": "Logging level for server output",
          "type": "string"
        },
        "oktaApiToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "omi": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "onlyofficeDocspace": {
      "required": [
        "baseUrl",
        "docspaceApiKey",
        "docspaceAuthToken",
        "docspacePassword",
        "docspaceUsername",
        "dynamic",
        "origin",
        "toolsets",
        "userAgent"
      ],
      "additionalProperties": false,
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "docspaceApiKey": {
          "type": "string"
        },
        "docspaceAuthToken": {
          "type": "string"
        },
        "docspacePassword": {
          "type": "string"
        },
        "docspaceUsername": {
          "type": "string"
        },
        "dynamic": {
          "type": "boolean"
        },
        "origin": {
          "type": "string"
        },
        "toolsets": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "openapi": {
      "required": [
        "mode"
      ],
      "additionalProperties": false,
      "properties": {
        "mode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "openbnbAirbnb": {
      "additionalProperties": false,
      "type": "object"
    },
    "openmesh": {
      "additionalProperties": false,
      "type": "object"
    },
    "openweather": {
      "required": [
        "owmApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "owmApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "openzeppelinCairo": {
      "additionalProperties": false,
      "type": "object"
    },
    "openzeppelinSolidity": {
      "additionalProperties": false,
      "type": "object"
    },
    "openzeppelinStellar": {
      "additionalProperties": false,
      "type": "object"
    },
    "openzeppelinStylus": {
      "additionalProperties": false,
      "type": "object"
    },
    "opik": {
      "required": [
        "apiBaseUrl",
        "apiKey",
        "workspaceName"
      ],
      "additionalProperties": false,
      "properties": {
        "apiBaseUrl": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        },
        "workspaceName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "opine": {
      "required": [
        "opineApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "opineApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "oracle": {
      "required": [
        "oracleConnectionString",
        "oracleUser",
        "password"
      ],
      "additionalProperties": false,
      "properties": {
        "oracleConnectionString": {
          "type": "string"
        },
        "oracleUser": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ospMarketingTools": {
      "additionalProperties": false,
      "type": "object"
    },
    "oxylabs": {
      "required": [
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paperSearch": {
      "additionalProperties": false,
      "type": "object"
    },
    "perplexityAsk": {
      "required": [
        "perplexityApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "perplexityApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pia": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pinecone": {
      "required": [
        "apiKey",
        "assistantHost"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "assistantHost": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "playwright": {
      "required": [
        "data"
      ],
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pluggedinMcpProxy": {
      "required": [
        "pluggedinApiBaseUrl",
        "pluggedinApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "pluggedinApiBaseUrl": {
          "description": "Base URL for the Plugged.in API (optional, defaults to https://plugged.in for cloud or http://localhost:12005 for self-hosted)",
          "type": "string"
        },
        "pluggedinApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "polarSignals": {
      "required": [
        "polarSignalsApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "polarSignalsApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pomodash": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "postgres": {
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "postman": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "prefEditor": {
      "additionalProperties": false,
      "type": "object"
    },
    "prometheus": {
      "required": [
        "prometheusUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "prometheusUrl": {
          "description": "The URL of your Prometheus server",
          "type": "string"
        }
      },
      "type": "object"
    },
    "puppeteer": {
      "additionalProperties": false,
      "type": "object"
    },
    "pythonRefactoring": {
      "additionalProperties": false,
      "type": "object"
    },
    "quantconnect": {
      "required": [
        "agentname",
        "quantconnectapitoken",
        "quantconnectuserid"
      ],
      "additionalProperties": false,
      "properties": {
        "agentname": {
          "type": "string"
        },
        "quantconnectapitoken": {
          "type": "string"
        },
        "quantconnectuserid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ramparts": {
      "additionalProperties": false,
      "type": "object"
    },
    "razorpay": {
      "required": [
        "keyId"
      ],
      "additionalProperties": false,
      "properties": {
        "keyId": {
          "type": "string"
        },
        "keySecret": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "reddit": {
      "required": [
        "redditClientId",
        "redditClientSecret",
        "redditPassword",
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "redditClientId": {
          "type": "string"
        },
        "redditClientSecret": {
          "type": "string"
        },
        "redditPassword": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "redis": {
      "required": [
        "caCerts",
        "caPath",
        "certReqs",
        "clusterMode",
        "host",
        "port",
        "pwd",
        "ssl",
        "sslCertfile",
        "sslKeyfile",
        "username"
      ],
      "additionalProperties": false,
      "properties": {
        "caCerts": {
          "type": "string"
        },
        "caPath": {
          "type": "string"
        },
        "certReqs": {
          "type": "string"
        },
        "clusterMode": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "pwd": {
          "type": "string"
        },
        "ssl": {
          "type": "boolean"
        },
        "sslCertfile": {
          "type": "string"
        },
        "sslKeyfile": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "redisCloud": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ref": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "remote": {
      "additionalProperties": false,
      "type": "object"
    },
    "render": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "resend": {
      "required": [
        "replyTo",
        "sender"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "replyTo": {
          "description": "comma separated list of reply to email addresses",
          "type": "string"
        },
        "sender": {
          "description": "sender email address",
          "type": "string"
        }
      },
      "type": "object"
    },
    "risken": {
      "required": [
        "accessToken",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "root": {
      "required": [
        "apiAccessToken"
      ],
      "additionalProperties": false,
      "properties": {
        "apiAccessToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ros2": {
      "additionalProperties": false,
      "type": "object"
    },
    "rube": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "rustMcpFilesystem": {
      "required": [
        "allowWrite",
        "allowedDirectories",
        "enableRoots"
      ],
      "additionalProperties": false,
      "properties": {
        "allowWrite": {
          "description": "Enable read/write mode. If false, the app operates in read-only mode.",
          "type": "boolean"
        },
        "allowedDirectories": {
          "description": "List of directories that rust-mcp-filesystem can access.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enableRoots": {
          "description": "Enable dynamic directory access control via MCP client-side Roots.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "schemacrawlerAi": {
      "required": [
        "generalInfoLevel",
        "volumeHostShare",
        "urlConnectionJdbcUrl",
        "serverConnectionServer"
      ],
      "additionalProperties": false,
      "properties": {
        "generalInfoLevel": {
          "description": "--info-level How much database metadata to retrieve",
          "type": "string"
        },
        "generalLogLevel": {
          "type": "string"
        },
        "schcrwlrDatabasePassword": {
          "type": "string"
        },
        "schcrwlrDatabaseUser": {
          "type": "string"
        },
        "serverConnectionDatabase": {
          "description": "--database Database to connect to (optional)",
          "type": "string"
        },
        "serverConnectionHost": {
          "description": "--host Database host (optional)",
          "type": "string"
        },
        "serverConnectionPort": {
          "description": "--port Database port (optional)",
          "type": "integer"
        },
        "serverConnectionServer": {
          "description": "--server SchemaCrawler database plugin",
          "type": "string"
        },
        "urlConnectionJdbcUrl": {
          "description": "--url JDBC URL for database connection",
          "type": "string"
        },
        "volumeHostShare": {
          "description": "Host volume to map within the Docker container",
          "type": "string"
        }
      },
      "type": "object"
    },
    "schoginiMcpImageBorder": {
      "additionalProperties": false,
      "type": "object"
    },
    "scrapegraph": {
      "required": [
        "sgaiApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "sgaiApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "scrapezy": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "securenoteLink": {
      "additionalProperties": false,
      "type": "object"
    },
    "semgrep": {
      "additionalProperties": false,
      "type": "object"
    },
    "sentry": {
      "required": [
        "authToken"
      ],
      "additionalProperties": false,
      "properties": {
        "authToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sequa": {
      "required": [
        "apiKey",
        "mcpServerUrl"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "mcpServerUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sequentialthinking": {
      "additionalProperties": false,
      "type": "object"
    },
    "shortIo": {
      "required": [
        "shortIoApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "shortIoApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "simplechecklist": {
      "additionalProperties": false,
      "type": "object"
    },
    "singlestore": {
      "required": [
        "mcpApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "mcpApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "slack": {
      "required": [
        "teamId"
      ],
      "additionalProperties": false,
      "properties": {
        "botToken": {
          "type": "string"
        },
        "channelIds": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "smartbear": {
      "required": [
        "apiHubApiKey",
        "bugsnagApiKey",
        "bugsnagAuthToken",
        "bugsnagEndpoint",
        "pactBrokerBaseUrl",
        "pactBrokerPassword",
        "pactBrokerToken",
        "pactBrokerUsername",
        "reflectApiToken"
      ],
      "additionalProperties": false,
      "properties": {
        "apiHubApiKey": {
          "type": "string"
        },
        "bugsnagApiKey": {
          "type": "string"
        },
        "bugsnagAuthToken": {
          "type": "string"
        },
        "bugsnagEndpoint": {
          "type": "string"
        },
        "pactBrokerBaseUrl": {
          "type": "string"
        },
        "pactBrokerPassword": {
          "type": "string"
        },
        "pactBrokerToken": {
          "type": "string"
        },
        "pactBrokerUsername": {
          "type": "string"
        },
        "reflectApiToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sonarqube": {
      "required": [
        "org",
        "token",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "org": {
          "description": "Organization key for SonarQube Cloud, not required for SonarQube Server or Community Build",
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "url": {
          "description": "URL of the SonarQube instance, to provide only for SonarQube Server or Community Build",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sqlite": {
      "additionalProperties": false,
      "type": "object"
    },
    "stackgen": {
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        },
        "url": {
          "description": "URL of your StackGen instance",
          "type": "string"
        }
      },
      "type": "object"
    },
    "stackhawk": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "stripe": {
      "required": [
        "secretKey"
      ],
      "additionalProperties": false,
      "properties": {
        "secretKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "supadata": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "suzieq": {
      "required": [
        "apiEndpoint",
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiEndpoint": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "taskOrchestrator": {
      "additionalProperties": false,
      "type": "object"
    },
    "tavily": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "teamwork": {
      "required": [
        "twMcpBearerToken"
      ],
      "additionalProperties": false,
      "properties": {
        "twMcpBearerToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "telnyx": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "tembo": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "terraform": {
      "additionalProperties": false,
      "type": "object"
    },
    "textToGraphql": {
      "required": [
        "graphqlApiKey",
        "graphqlAuthType",
        "graphqlEndpoint",
        "modelName",
        "modelTemperature",
        "openaiApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "graphqlApiKey": {
          "type": "string"
        },
        "graphqlAuthType": {
          "description": "Authentication method for GraphQL API",
          "type": "string"
        },
        "graphqlEndpoint": {
          "type": "string"
        },
        "modelName": {
          "description": "OpenAI model to use",
          "type": "string"
        },
        "modelTemperature": {
          "description": "Model temperature for responses",
          "type": "number"
        },
        "openaiApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "tigris": {
      "required": [
        "awsAccessKeyId",
        "awsEndpointUrlS3"
      ],
      "additionalProperties": false,
      "properties": {
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsEndpointUrlS3": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "time": {
      "additionalProperties": false,
      "type": "object"
    },
    "triplewhale": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "unrealEngine": {
      "required": [
        "ueHost",
        "ueRcHttpPort",
        "ueRcWsPort"
      ],
      "additionalProperties": false,
      "properties": {
        "logLevel": {
          "description": "Logging level",
          "type": "string"
        },
        "ueHost": {
          "description": "Unreal Engine host address. Use: host.docker.internal for local UE on Windows/Mac Docker, 127.0.0.1 for Linux without Docker, or actual IP address (e.g., 192.168.1.100) for remote UE",
          "type": "string"
        },
        "ueRcHttpPort": {
          "description": "Remote Control HTTP port",
          "type": "string"
        },
        "ueRcWsPort": {
          "description": "Remote Control WebSocket port",
          "type": "string"
        }
      },
      "type": "object"
    },
    "veyrax": {
      "required": [
        "apiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "apiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vizro": {
      "additionalProperties": false,
      "type": "object"
    },
    "vulnNist": {
      "additionalProperties": false,
      "type": "object"
    },
    "wayfound": {
      "required": [
        "mcpApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "mcpApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "webflow": {
      "required": [
        "token"
      ],
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "wikipedia": {
      "additionalProperties": false,
      "type": "object"
    },
    "wolframAlpha": {
      "required": [
        "wolframApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "wolframApiKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "youtubeTranscript": {
      "additionalProperties": false,
      "type": "object"
    },
    "zerodhaKite": {
      "required": [
        "kiteApiKey"
      ],
      "additionalProperties": false,
      "properties": {
        "kiteAccessToken": {
          "description": "Access token obtained after OAuth authentication (optional - can be generated at runtime)",
          "type": "string"
        },
        "kiteApiKey": {
          "description": "Your Kite Connect API key from the developer console",
          "type": "string"
        },
        "kiteApiSecret": {
          "type": "string"
        },
        "kiteRedirectUrl": {
          "description": "OAuth redirect URL configured in your Kite Connect app",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}