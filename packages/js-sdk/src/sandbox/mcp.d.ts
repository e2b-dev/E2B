/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface McpServer {
  airtable?: AirtableMCPServer
  aks?: AzureKubernetesServiceAKS
  apiGateway?: ApiGateway
  apify?: ApifyMCPServer
  arxiv?: ArXivMCPServer
  astGrep?: AstGrep
  astraDb?: AstraDB
  astroDocs?: AstroDocs
  atlan?: AtlanMCPServer
  atlasDocs?: AtlasDocs
  atlassian?: Atlassian
  audienseInsights?: AudienseInsights
  awsCdk?: AWSCDK
  awsCore?: AWSCoreMCPServer
  awsDiagram?: AWSDiagram
  awsDocumentation?: AWSDocumentation
  awsKbRetrievalServer?: AWSKBRetrievalArchived
  awsTerraform?: AWSTerraform
  azure?: Azure
  beagleSecurity?: BeagleSecurityMCPServer
  bitrefill?: Bitrefill
  box?: Box
  brave?: BraveSearch
  browserbase?: Browserbase
  buildkite?: Buildkite
  camunda?: CamundaBPMProcessEngineMCPServer
  cdataConnectcloud?: CDataConnectCloud
  charmhealth?: CharmHealthMCPServer
  chroma?: Chroma
  circleci?: CircleCI
  clickhouse?: OfficialClickHouseMCPServer
  close?: Close
  cloudRun?: CloudRunMCP
  cloudflareDocs?: CloudflareDocs
  cockroachdb?: CockroachDB
  codeInterpreter?: PythonInterpreter
  context7?: Context7
  couchbase?: Couchbase
  cylera?: TheOfficialMCPServerForCylera
  cyreslabAiShodan?: Shodan
  dappier?: Dappier
  dappierRemote?: DappierRemoteMCPServer
  dart?: DartAI
  databaseServer?: MCPDatabaseServer
  databutton?: Databutton
  deepwiki?: DeepWiki
  descope?: Descope
  desktopCommander?: DesktopCommander
  devhubCms?: DevHubCMS
  discord?: Discord
  dockerhub?: DockerHub
  dodoPayments?: DodoPayments
  dreamfactory?: DreamFactoryMCPServer
  duckduckgo?: DuckDuckGo
  dynatrace?: DynatraceMCPServer
  e2b?: E2B
  edubase?: EduBase
  effect?: EffectMCP
  elasticsearch?: Elasticsearch
  elevenlabs?: ElevenlabsMCP
  everart?: EverArtArchived
  exa?: Exa
  explorium?: ExploriumB2BData
  fetch?: FetchReference
  fibery?: Fibery
  filesystem?: FilesystemReference
  findADomain?: FindADomain
  firecrawl?: Firecrawl
  firewalla?: FirewallaMCPServer
  flexprice?: FlexPrice
  git?: GitReference
  github?: GitHubArchived
  githubChat?: GitHubChat
  githubOfficial?: GitHubOfficial
  gitlab?: GitLabArchived
  gitmcp?: GitMCP
  glif?: GlifApp
  gmail?: GmailMCPServer
  googleMaps?: GoogleMapsArchived
  googleMapsComprehensive?: GoogleMapsComprehensiveMCP
  grafana?: Grafana
  gyazo?: Gyazo
  hackernews?: HackernewsMcp
  hackle?: Hackle
  handwritingOcr?: HandwritingOCR
  hdx?: HumanitarianDataExchangeMCPServer
  heroku?: Heroku
  hostinger?: HostingerAPIMCPServer
  hoverfly?: HoverflyMCPServer
  hubspot?: HubSpot
  huggingFace?: HuggingFace
  hummingbot?: HummingbotMCPTradingAgent
  husqvarnaAutomower?: HusqvarnaAutomower
  hyperbrowser?: Hyperbrowser
  hyperspell?: Hyperspell
  iaptic?: Iaptic
  inspektorGadget?: InspektorGadget
  javadocs?: Javadocs
  jetbrains?: JetBrains
  kafkaSchemaReg?: KafkaSchemaRegistryMCP
  kagisearch?: KagiSearch
  keboola?: KeboolaMCPServer
  kong?: KongKonnect
  kubectl?: KubectlMCPServer
  kubernetes?: Kubernetes
  lara?: LaraTranslate
  line?: LINE
  linkedin?: LinkedInMCPServer
  llmtxt?: LLMText
  maestro?: MaestroMCPServer
  manifold?: Manifold
  mapbox?: MapboxMCPServer
  mapboxDevkit?: MapboxDeveloperMCPServer
  markdownify?: Markdownify
  markitdown?: Markitdown
  mavenTools?: MavenToolsMCPServer
  memory?: MemoryReference
  mercadoLibre?: MercadoLibre
  mercadoPago?: MercadoPago
  metabase?: MetabaseMCP
  minecraftWiki?: MinecraftWiki
  mongodb?: MongoDB
  multiversxMx?: MultiversX
  nasdaqDataLink?: NasdaqDataLink
  needle?: Needle
  neo4jCloudAuraApi?: Neo4JCloudAuraApi
  neo4jCypher?: Neo4JCypher
  neo4jDataModeling?: Neo4JDataModeling
  neo4jMemory?: Neo4JMemory
  neon?: Neon
  nodeCodeSandbox?: NodeJsSandbox
  notion?: Notion
  novita?: Novita
  npmSentinel?: NPMSentinel
  obsidian?: Obsidian
  oktaMcpFctr?: OktaMCPServer
  omi?: OmiMcp
  onlyofficeDocspace?: ONLYOFFICEDocSpace
  openapi?: OpenAPIToolkitForMCP
  openapiSchema?: OpenAPISchema
  openbnbAirbnb?: AirbnbSearch
  openmesh?: OpenMesh
  openweather?: Openweather
  openzeppelinCairo?: OpenZeppelinCairoContracts
  openzeppelinSolidity?: OpenZeppelinSolidityContracts
  openzeppelinStellar?: OpenZeppelinStellarContracts
  openzeppelinStylus?: OpenZeppelinStylusContracts
  opik?: Opik
  opine?: OpineMCPServer
  oracle?: OracleDatabaseMCPServer
  ospMarketingTools?: OSPMarketingTools
  oxylabs?: Oxylabs
  paperSearch?: PaperSearch
  perplexityAsk?: Perplexity
  pia?: ProgramIntegrityAlliance
  pinecone?: PineconeAssistant
  playwright?: ExecuteAutomationPlaywrightMCP
  pluggedinMcpProxy?: PluggedInMCPProxy
  polarSignals?: PolarSignals
  pomodash?: PomoDash
  postgres?: PostgreSQLReadonlyArchived
  postman?: PostmanMCPServer
  prefEditor?: PrefEditor
  prometheus?: Prometheus
  puppeteer?: PuppeteerArchived
  pythonRefactoring?: PythonRefactoringAssistant
  quantconnect?: QuantConnectMCPServer
  ramparts?: RampartsMCPSecurityScanner
  razorpay?: Razorpay
  reddit?: McpReddit
  redis?: Redis
  redisCloud?: RedisCloud
  ref?: RefUpToDateDocs
  remote?: RemoteMCP
  render?: Render
  resend?: SendEmails
  risken?: RISKEN
  root?: RootIoVulnerabilityRemediationMCP
  ros2?: WiseVisionROS2MCPServer
  rube?: Rube
  rustMcpFilesystem?: BlazingFastAsynchronousMCPServerForSeamlessFilesystemOperations
  schemacrawlerAi?: SchemaCrawlerAI
  schoginiMcpImageBorder?: SchoginiMCPImageBorder
  scrapegraph?: ScrapeGraph
  scrapezy?: Scrapezy
  securenoteLink?: SecurenoteLinkMcpServer
  semgrep?: Semgrep
  sentry?: SentryArchived
  sequa?: SequaAI
  sequentialthinking?: SequentialThinkingReference
  shortIo?: ShortIo
  simplechecklist?: SimpleCheckListMCPServer
  singlestore?: Singlestore
  slack?: SlackArchived
  smartbear?: SmartBearMCPServer
  sonarqube?: SonarQube
  sqlite?: SQLiteArchived
  stackgen?: StackGen
  stackhawk?: StackHawk
  stripe?: Stripe
  supadata?: Supadata
  suzieq?: SuzieqMCP
  taskOrchestrator?: TaskOrchestrator
  tavily?: Tavily
  teamwork?: Teamwork
  telnyx?: Telnyx
  tembo?: Tembo
  terraform?: HashicorpTerraform
  textToGraphql?: TextToGraphQL
  tigris?: TigrisData
  time?: TimeReference
  triplewhale?: Triplewhale
  unrealEngine?: UnrealEngineMCPServer
  veyrax?: VeyraX
  vizro?: Vizro
  vulnNist?: VulnNistMcpServer
  wayfound?: WayfoundMCP
  webflow?: Webflow
  wikipedia?: Wikipedia
  wolframAlpha?: WolframAlpha
  youtubeTranscript?: YouTubeTranscripts
  zerodhaKite?: ZerodhaKiteConnect
}
/**
 * Provides AI assistants with direct access to Airtable bases, allowing them to read schemas, query records, and interact with your Airtable data. Supports listing bases, retrieving table structures, and searching through records to help automate workflows and answer questions about your organized data.
 */
export interface AirtableMCPServer {
  airtableApiKey: string
  nodeenv: string
}
/**
 * Azure Kubernetes Service (AKS) official MCP server.
 */
export interface AzureKubernetesServiceAKS {
  /**
   * Access level for the MCP server, One of [ readonly, readwrite, admin ]
   */
  accessLevel: string
  /**
   * Comma-separated list of additional tools, One of [ helm, cilium ]
   */
  additionalTools?: string
  /**
   * Comma-separated list of namespaces to allow access to. If not specified, all namespaces are allowed.
   */
  allowNamespaces?: string
  /**
   * Path to the Azure configuration directory (e.g. /home/azureuser/.azure). Used for Azure CLI authentication, you should be logged in (e.g. run `az login`) on the host before starting the MCP server.
   */
  azureDir: string
  /**
   * Username or UID of the container user (format <name|uid>[:<group|gid>] e.g. 10000), ensuring correct permissions to access the Azure and kubeconfig files. Leave empty to use default user in the container.
   */
  containerUser?: string
  /**
   * Path to the kubeconfig file for the AKS cluster (e.g. /home/azureuser/.kube/config). Used to connect to the AKS cluster.
   */
  kubeconfig: string
}
/**
 * A universal MCP (Model Context Protocol) server to integrate any API with Claude Desktop using only Docker configurations.
 */
export interface ApiGateway {
  api1HeaderAuthorization: string
  api1Name: string
  api1SwaggerUrl: string
}
/**
 * Apify is the world's largest marketplace of tools for web scraping, data extraction, and web automation. You can extract structured data from social media, e-commerce, search engines, maps, travel sites, or any other website.
 */
export interface ApifyMCPServer {
  apifyToken: string
  /**
   * Comma-separated list of tools to enable. Can be either a tool category, a specific tool, or an Apify Actor. For example: "actors,docs,apify/rag-web-browser". For more details visit https://mcp.apify.com.
   */
  tools: string
}
/**
 * The ArXiv MCP Server provides a comprehensive bridge between AI assistants and arXiv's research repository through the Model Context Protocol (MCP).   Features: • Search arXiv papers with advanced filtering • Download and store papers locally as markdown • Read and analyze paper content • Deep research analysis prompts • Local paper management and storage • Enhanced tool descriptions optimized for local AI models • Docker MCP Gateway compatible with detailed context  Perfect for researchers, academics, and AI assistants conducting literature reviews and research analysis.  **Recent Update**: Enhanced tool descriptions specifically designed to resolve local AI model confusion and improve Docker MCP Gateway compatibility.
 */
export interface ArXivMCPServer {
  /**
   * Directory path where downloaded papers will be stored
   */
  storagePath: string
}
/**
 * ast-grep is a fast and polyglot tool for code structural search, lint, rewriting at large scale.
 */
export interface AstGrep {
  path: string
}
/**
 * An MCP server for Astra DB workloads.
 */
export interface AstraDB {
  astraDbApplicationToken: string
  endpoint: string
}
/**
 * Access the latest Astro web framework documentation, guides, and API references.
 */
export interface AstroDocs {}
/**
 * MCP server for interacting with Atlan services including asset search, updates, and lineage traversal for comprehensive data governance and discovery.
 */
export interface AtlanMCPServer {
  apiKey: string
  baseUrl: string
}
/**
 * Provide LLMs hosted, clean markdown documentation of libraries and frameworks.
 */
export interface AtlasDocs {
  apiUrl: string
}
/**
 * Tools for Atlassian products (Confluence and Jira). This integration supports both Atlassian Cloud and Jira Server/Data Center deployments.
 */
export interface Atlassian {
  confluenceApiToken?: string
  confluencePersonalToken?: string
  confluenceUrl: string
  confluenceUsername?: string
  jiraApiToken?: string
  jiraPersonalToken?: string
  jiraUrl: string
  jiraUsername?: string
}
/**
 * Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account.
 */
export interface AudienseInsights {
  audienseClientSecret?: string
  clientId: string
  twitterBearerToken?: string
}
/**
 * AWS Cloud Development Kit (CDK) best practices, infrastructure as code patterns, and security compliance with CDK Nag.
 */
export interface AWSCDK {}
/**
 * Starting point for using the awslabs MCP servers.
 */
export interface AWSCoreMCPServer {}
/**
 * Seamlessly create diagrams using the Python diagrams package DSL. This server allows you to generate AWS diagrams, sequence diagrams, flow diagrams, and class diagrams using Python code.
 */
export interface AWSDiagram {}
/**
 * Tools to access AWS documentation, search for content, and get recommendations.
 */
export interface AWSDocumentation {}
/**
 * An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.
 */
export interface AWSKBRetrievalArchived {
  accessKeyId: string
  awsSecretAccessKey?: string
}
/**
 * Terraform on AWS best practices, infrastructure as code patterns, and security compliance with Checkov.
 */
export interface AWSTerraform {}
/**
 * The Azure MCP Server, bringing the power of Azure to your agents.
 */
export interface Azure {}
/**
 * Connects with the Beagle Security backend using a user token to manage applications, run automated security tests, track vulnerabilities across environments, and gain intelligence from Application and API vulnerability data.
 */
export interface BeagleSecurityMCPServer {
  beagleSecurityApiToken: string
}
/**
 * A Model Context Protocol Server connector for Bitrefill public API, to enable AI agents to search and shop on Bitrefill.
 */
export interface Bitrefill {
  apiId: string
  apiSecret?: string
}
/**
 * An MCP server capable of interacting with the Box API.
 */
export interface Box {
  clientId: string
  clientSecret?: string
}
/**
 * Search the Web for pages, images, news, videos, and more using the Brave Search API.
 */
export interface BraveSearch {
  apiKey: string
}
/**
 * Allow LLMs to control a browser with Browserbase and Stagehand for AI-powered web automation, intelligent data extraction, and screenshot capture.
 */
export interface Browserbase {
  apiKey: string
  geminiApiKey: string
  projectId: string
}
/**
 * Buildkite MCP lets agents interact with Buildkite Builds, Jobs, Logs, Packages and Test Suites.
 */
export interface Buildkite {
  apiToken: string
}
/**
 * Tools to interact with the Camunda 7 Community Edition Engine using the Model Context Protocol (MCP). Whether you're automating workflows, querying process instances, or integrating with external systems, Camunda MCP Server is your agentic solution for seamless interaction with Camunda.
 */
export interface CamundaBPMProcessEngineMCPServer {
  camundahost: string
}
/**
 * This fully functional MCP Server allows you to connect to any data source in Connect Cloud from Claude Desktop.
 */
export interface CDataConnectCloud {
  cdataPat?: string
  username: string
}
/**
 * An MCP server for CharmHealth EHR that allows LLMs and MCP clients to interact with patient records, encounters, and practice information.
 */
export interface CharmHealthMCPServer {
  charmhealthApiKey: string
  charmhealthBaseUrl: string
  charmhealthClientId: string
  charmhealthClientSecret: string
  charmhealthRedirectUri: string
  charmhealthRefreshToken: string
  charmhealthTokenUrl: string
}
/**
 * A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma.
 */
export interface Chroma {
  apiKey: string
}
/**
 * A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.
 */
export interface CircleCI {
  token: string
  url: string
}
/**
 * Official ClickHouse MCP Server.
 */
export interface OfficialClickHouseMCPServer {
  connectTimeout: string
  host: string
  password: string
  port: string
  secure: string
  sendReceiveTimeout: string
  user: string
  verify: string
}
/**
 * Streamline sales processes with integrated calling, email, SMS, and automated workflows for small and scaling businesses.
 */
export interface Close {
  apiKey: string
}
/**
 * MCP server to deploy apps to Cloud Run.
 */
export interface CloudRunMCP {
  /**
   * path to application-default credentials (eg $HOME/.config/gcloud/application_default_credentials.json )
   */
  credentialsPath: string
}
/**
 * Access the latest documentation on Cloudflare products such as Workers, Pages, R2, D1, KV.
 */
export interface CloudflareDocs {}
/**
 * Enable AI agents to manage, monitor, and query CockroachDB using natural language. Perform complex database operations, cluster management, and query execution seamlessly through AI-driven workflows. Integrate effortlessly with MCP clients for scalable and high-performance data operations.
 */
export interface CockroachDB {
  caPath: string
  crdbPwd: string
  database: string
  host: string
  port: number
  sslCertfile: string
  sslKeyfile: string
  sslMode: string
  username: string
}
/**
 * A Python-based execution tool that mimics a Jupyter notebook environment. It accepts code snippets, executes them, and maintains state across sessions — preserving variables, imports, and past results. Ideal for iterative development, debugging, or code execution.
 */
export interface PythonInterpreter {}
/**
 * Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors.
 */
export interface Context7 {}
/**
 * Couchbase is a distributed document database with a powerful search engine and in-built operational and analytical capabilities.
 */
export interface Couchbase {
  /**
   * Bucket in the Couchbase cluster to use for the MCP server.
   */
  cbBucketName: string
  /**
   * Connection string for the Couchbase cluster.
   */
  cbConnectionString: string
  /**
   * Setting to "true" (default) enables read-only query mode while running SQL++ queries.
   */
  cbMcpReadOnlyQueryMode: string
  cbPassword: string
  /**
   * Username for the Couchbase cluster with access to the bucket.
   */
  cbUsername: string
}
/**
 * Brings context about device inventory, threats, risks and utilization powered by the Cylera Partner API into an LLM.
 */
export interface TheOfficialMCPServerForCylera {
  cyleraBaseUrl: string
  cyleraPassword: string
  cyleraUsername: string
}
/**
 * A Model Context Protocol server that provides access to Shodan API functionality.
 */
export interface Shodan {
  shodanApiKey: string
}
/**
 * Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.
 */
export interface Dappier {
  apiKey: string
}
/**
 * Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.
 */
export interface DappierRemoteMCPServer {
  dappierRemoteApiKey: string
}
/**
 * Dart AI Model Context Protocol (MCP) server.
 */
export interface DartAI {
  host: string
  token: string
}
/**
 * Comprehensive database server supporting PostgreSQL, MySQL, and SQLite with natural language SQL query capabilities. Enables AI agents to interact with databases through both direct SQL and natural language queries.
 */
export interface MCPDatabaseServer {
  /**
   * Connection string for your database. Examples: SQLite: sqlite+aiosqlite:///data/mydb.db, PostgreSQL: postgresql+asyncpg://user:password@localhost:5432/mydb, MySQL: mysql+aiomysql://user:password@localhost:3306/mydb
   */
  databaseUrl: string
}
/**
 * Databutton MCP Server.
 */
export interface Databutton {}
/**
 * Tools for fetching and asking questions about GitHub repositories.
 */
export interface DeepWiki {}
/**
 * The Descope Model Context Protocol (MCP) server provides an interface to interact with Descope's Management APIs, enabling the search and retrieval of project-related information.
 */
export interface Descope {
  managementKey?: string
  projectId: string
}
/**
 * Search, update, manage files and run terminal commands with AI.
 */
export interface DesktopCommander {
  /**
   * List of directories that Desktop Commander can access
   */
  paths: string[]
}
/**
 * DevHub CMS LLM integration through the Model Context Protocol.
 */
export interface DevHubCMS {
  devhubApiKey?: string
  devhubApiSecret?: string
  url: string
}
/**
 * Interact with the Discord platform.
 */
export interface Discord {
  discordToken: string
}
/**
 * Docker Hub official MCP server.
 */
export interface DockerHub {
  hubPatToken: string
  username: string
}
/**
 * Tools for cross-border payments, taxes, and compliance.
 */
export interface DodoPayments {
  dodoPaymentsApiKey: string
}
/**
 * DreamFactory is a REST API generation platform with support for hundreds of data sources, including Microsoft SQL Server, MySQL, PostgreSQL, and MongoDB. The DreamFactory MCP Server makes it easy for users to securely interact with their data sources via an MCP client.
 */
export interface DreamFactoryMCPServer {
  dreamfactoryapikey: string
  dreamfactoryurl: string
}
/**
 * A Model Context Protocol (MCP) server that provides web search capabilities through DuckDuckGo, with additional features for content fetching and parsing.
 */
export interface DuckDuckGo {}
/**
 * This MCP Server allows interaction with the Dynatrace observability platform, brining real-time observability data directly into your development workflow.
 */
export interface DynatraceMCPServer {
  oauthClientId: string
  oauthClientSecret: string
  url: string
}
/**
 * Giving Claude ability to run code with E2B via MCP (Model Context Protocol).
 */
export interface E2B {
  apiKey: string
}
/**
 * The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).
 */
export interface EduBase {
  apiKey?: string
  app: string
  url: string
}
/**
 * Tools and resources for writing Effect code in Typescript.
 */
export interface EffectMCP {}
/**
 * Interact with your Elasticsearch indices through natural language conversations.
 */
export interface Elasticsearch {
  esApiKey?: string
  url: string
}
/**
 * Official ElevenLabs Model Context Protocol (MCP) server that enables interaction with powerful Text to Speech and audio processing APIs.
 */
export interface ElevenlabsMCP {
  apiKey?: string
  data: string
}
/**
 * Image generation server using EverArt's API.
 */
export interface EverArtArchived {
  apiKey: string
}
/**
 * Exa MCP for web search and web crawling!.
 */
export interface Exa {
  apiKey: string
}
/**
 * Discover companies, contacts, and business insights—powered by dozens of trusted external data sources.
 */
export interface ExploriumB2BData {
  apiAccessToken: string
}
/**
 * Fetches a URL from the internet and extracts its contents as markdown.
 */
export interface FetchReference {}
/**
 * Interact with your Fibery workspace.
 */
export interface Fibery {
  apiToken: string
  host: string
}
/**
 * Local filesystem access with configurable allowed paths.
 */
export interface FilesystemReference {
  paths: string[]
}
/**
 * Tools for finding domain names.
 */
export interface FindADomain {}
/**
 * 🔥 Official Firecrawl MCP Server - Adds powerful web scraping and search to Cursor, Claude and any other LLM clients.
 */
export interface Firecrawl {
  apiKey: string
  creditCriticalThreshold: number
  creditWarningThreshold: number
  retryBackoffFactor: number
  retryDelay: number
  retryMax: number
  retryMaxDelay: number
  url: string
}
/**
 * Real-time network monitoring, security analysis, and firewall management through 28 specialized tools. Access security alerts, network flows, device status, and firewall rules directly from your Firewalla device.
 */
export interface FirewallaMCPServer {
  /**
   * Your Firewalla Box Global ID
   */
  boxId: string
  firewallaMspToken: string
  /**
   * Your Firewalla MSP domain (e.g., yourdomain.firewalla.net)
   */
  mspId: string
}
/**
 * Official flexprice MCP Server.
 */
export interface FlexPrice {
  apiKey: string
  baseUrl: string
}
/**
 * Git repository interaction and automation.
 */
export interface GitReference {
  paths: string[]
}
/**
 * Tools for interacting with the GitHub API, enabling file operations, repository management, search functionality, and more.
 */
export interface GitHubArchived {
  personalAccessToken: string
}
/**
 * A Model Context Protocol (MCP) for analyzing and querying GitHub repositories using the GitHub Chat API.
 */
export interface GitHubChat {
  githubApiKey: string
}
/**
 * Official GitHub MCP Server, by GitHub. Provides seamless integration with GitHub APIs, enabling advanced automation and interaction capabilities for developers and tools.
 */
export interface GitHubOfficial {
  githubPersonalAccessToken: string
}
/**
 * MCP Server for the GitLab API, enabling project management, file operations, and more.
 */
export interface GitLabArchived {
  personalAccessToken: string
  /**
   * api url - optional for self-hosted instances
   */
  url: string
}
/**
 * Tools for interacting with Git repositories.
 */
export interface GitMCP {}
/**
 * Easily run glif.app AI workflows inside your LLM: image generators, memes, selfies, and more. Glif supports all major multimedia AI models inside one app.
 */
export interface GlifApp {
  apiToken: string
  ids: string
  ignoredSaved: boolean
}
/**
 * A Model Context Protocol server for Gmail operations using IMAP/SMTP with app password authentication. Supports listing messages, searching emails, and sending messages. To create your app password, visit your Google Account settings under Security > App Passwords. Or visit the link https://myaccount.google.com/apppasswords.
 */
export interface GmailMCPServer {
  /**
   * Your Gmail email address
   */
  emailAddress: string
  emailPassword?: string
}
/**
 * Tools for interacting with the Google Maps API.
 */
export interface GoogleMapsArchived {
  googleMapsApiKey: string
}
/**
 * Complete Google Maps integration with 8 tools including geocoding, places search, directions, elevation data, and more using Google's latest APIs.
 */
export interface GoogleMapsComprehensiveMCP {
  googleMapsApiKey: string
}
/**
 * MCP server for Grafana.
 */
export interface Grafana {
  apiKey: string
  url: string
}
/**
 * Official Model Context Protocol server for Gyazo.
 */
export interface Gyazo {
  accessToken: string
}
/**
 * A Model Context Protocol (MCP) server that provides access to Hacker News stories, comments, and user data, with support for search and content retrieval.
 */
export interface HackernewsMcp {}
/**
 * Model Context Protocol server for Hackle.
 */
export interface Hackle {
  apiKey: string
}
/**
 * Model Context Protocol (MCP) Server for Handwriting OCR.
 */
export interface HandwritingOCR {
  apiToken: string
}
/**
 * HDX MCP Server provides access to humanitarian data through the Humanitarian Data Exchange (HDX) API - https://data.humdata.org/hapi. This server offers 33 specialized tools for retrieving humanitarian information including affected populations (refugees, IDPs, returnees), baseline demographics, food security indicators, conflict data, funding information, and operational presence across hundreds of countries and territories. See repository for instructions on getting a free HDX_APP_INDENTIFIER for access.
 */
export interface HumanitarianDataExchangeMCPServer {
  appIdentifier: string
}
/**
 * Heroku Platform MCP Server using the Heroku CLI.
 */
export interface Heroku {
  apiKey: string
}
/**
 * Interact with Hostinger services over the Hostinger API.
 */
export interface HostingerAPIMCPServer {
  apitoken: string
}
/**
 * A Model Context Protocol (MCP) server that exposes Hoverfly as a programmable tool for AI assistants like Cursor, Claude, GitHub Copilot, and others supporting MCP. It enables dynamic mocking of third-party APIs to unblock development, automate testing, and simulate unavailable services during integration.
 */
export interface HoverflyMCPServer {
  data: string
}
/**
 * Unite marketing, sales, and customer service with AI-powered automation, lead management, and comprehensive analytics.
 */
export interface HubSpot {
  apiKey: string
}
/**
 * Tools for interacting with Hugging Face models, datasets, research papers, and more.
 */
export interface HuggingFace {}
/**
 * Hummingbot MCP is an open-source toolset that lets you control and monitor your Hummingbot trading bots through AI-powered commands and automation.
 */
export interface HummingbotMCPTradingAgent {
  apiUrl: string
  hummingbotApiPassword?: string
  hummingbotApiUsername?: string
}
/**
 * MCP Server for huqsvarna automower.
 */
export interface HusqvarnaAutomower {
  clientId: string
  husqvarnaClientSecret: string
}
/**
 * A MCP server implementation for hyperbrowser.
 */
export interface Hyperbrowser {
  apiKey: string
}
/**
 * Hyperspell MCP Server.
 */
export interface Hyperspell {
  collection: string
  token: string
  useResources: boolean
}
/**
 * Model Context Protocol server for interacting with iaptic.
 */
export interface Iaptic {
  apiKey?: string
  appName: string
}
/**
 * AI interface to troubleshoot and observe Kubernetes/Container workloads.
 */
export interface InspektorGadget {
  /**
   * Comma-separated list of gadget images (trace_dns, trace_tcp, etc) to use, allowing control over which gadgets are available as MCP tools
   */
  gadgetImages?: string
  /**
   * Path to the kubeconfig file for accessing Kubernetes clusters
   */
  kubeconfig: string
}
/**
 * Access to Java, Kotlin, and Scala library documentation.
 */
export interface Javadocs {}
/**
 * A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio.
 */
export interface JetBrains {
  port: number
}
/**
 * Comprehensive MCP server for Kafka Schema Registry operations. Features multi-registry support, schema contexts, migration tools, OAuth authentication, and 57+ tools for complete schema management. Supports SLIM_MODE for optimal performance.
 */
export interface KafkaSchemaRegistryMCP {
  /**
   * Schema Registry URL
   */
  registryUrl: string
  schemaRegistryPassword?: string
  schemaRegistryUser?: string
  /**
   * Enable SLIM_MODE for better performance
   */
  slimMode?: string
  /**
   * Enable read-only mode
   */
  viewonly?: string
}
/**
 * The Official Model Context Protocol (MCP) server for Kagi search & other tools.
 */
export interface KagiSearch {
  engine: string
  kagiApiKey: string
}
/**
 * Keboola MCP Server is an open-source bridge between your Keboola project and modern AI tools.
 */
export interface KeboolaMCPServer {
  kbcStorageToken: string
  kbcWorkspaceSchema: string
}
/**
 * A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.
 */
export interface KongKonnect {
  konnectAccessToken: string
  region: string
}
/**
 * MCP Server that enables AI assistants to interact with Kubernetes clusters via kubectl operations.
 */
export interface KubectlMCPServer {
  kubeconfig: string
}
/**
 * Connect to a Kubernetes cluster and manage it.
 */
export interface Kubernetes {
  /**
   * the path to the host .kube/config
   */
  configPath: string
}
/**
 * Connect to Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.
 */
export interface LaraTranslate {
  accessKeySecret?: string
  keyId: string
}
/**
 * MCP server that integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.
 */
export interface LINE {
  channelAccessToken?: string
  userId: string
}
/**
 * This MCP server allows Claude and other AI assistants to access your LinkedIn. Scrape LinkedIn profiles and companies, get your recommended jobs, and perform job searches. Set your li_at LinkedIn cookie to use this server.
 */
export interface LinkedInMCPServer {
  linkedinCookie: string
  /**
   * Custom user agent string (optional, helps avoid detection and cookie login issues)
   */
  userAgent: string
}
/**
 * Discovers and retrieves llms.txt from websites.
 */
export interface LLMText {}
/**
 * A Model Context Protocol (MCP) server exposing Bitcoin blockchain data through the Maestro API platform. Provides tools to explore blocks, transactions, addresses, inscriptions, runes, and other metaprotocol data.
 */
export interface MaestroMCPServer {
  apiKeyApiKey: string
}
/**
 * Tools for accessing the Manifold Markets online prediction market platform.
 */
export interface Manifold {}
/**
 * Transform any AI agent into a geospatially-aware system with Mapbox APIs. Provides geocoding, POI search, routing, travel time matrices, isochrones, and static map generation.
 */
export interface MapboxMCPServer {
  accessToken: string
}
/**
 * Direct access to Mapbox developer APIs for AI assistants. Enables style management, token management, GeoJSON preview, and other developer tools for building Mapbox applications.
 */
export interface MapboxDeveloperMCPServer {
  mapboxAccessToken: string
}
/**
 * A Model Context Protocol server for converting almost anything to Markdown.
 */
export interface Markdownify {
  paths: string[]
}
/**
 * A lightweight MCP server for calling MarkItDown.
 */
export interface Markitdown {
  paths: string[]
}
/**
 * JVM dependency intelligence for any build tool using Maven Central Repository. Includes Context7 integration for upgrade documentation and guidance.
 */
export interface MavenToolsMCPServer {}
/**
 * Knowledge graph-based persistent memory system.
 */
export interface MemoryReference {}
/**
 * Provides access to Mercado Libre E-Commerce API.
 */
export interface MercadoLibre {
  mercadoLibreApiKey: string
}
/**
 * Provides access to Mercado Pago Marketplace API.
 */
export interface MercadoPago {
  mercadoPagoApiKey: string
}
/**
 * A comprehensive MCP server for Metabase with 70+ tools.
 */
export interface MetabaseMCP {
  apiKey: string
  metabaseurl: string
  metabaseusername: string
  password: string
}
/**
 * A MCP Server for browsing the official Minecraft Wiki!.
 */
export interface MinecraftWiki {}
/**
 * A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.
 */
export interface MongoDB {
  mdbMcpConnectionString: string
}
/**
 * MCP Server for MultiversX.
 */
export interface MultiversX {
  network: string
  wallet: string
}
/**
 * MCP server to interact with the data feeds provided by the Nasdaq Data Link. Developed by the community and maintained by Stefano Amorelli.
 */
export interface NasdaqDataLink {
  nasdaqDataLinkApiKey: string
}
/**
 * Production-ready RAG service to search and retrieve data from your documents.
 */
export interface Needle {
  needleApiKey: string
}
/**
 * Manage Neo4j Aura database instances through the Neo4j Aura API.
 */
export interface Neo4JCloudAuraApi {
  clientId: string
  neo4jAuraClientSecret?: string
  serverAllowOrigins?: string
  serverAllowedHosts?: string
  serverHost?: string
  serverPath?: string
  serverPort?: string
  transport?: string
}
/**
 * Interact with Neo4j using Cypher graph queries.
 */
export interface Neo4JCypher {
  database?: string
  namespace?: string
  neo4jPassword?: string
  readOnly?: boolean
  readTimeout?: string
  responseTokenLimit?: string
  serverAllowOrigins?: string
  serverAllowedHosts?: string
  serverHost?: string
  serverPath?: string
  serverPort?: string
  transport?: string
  url: string
  username: string
}
/**
 * MCP server that assists in creating, validating and visualizing graph data models.
 */
export interface Neo4JDataModeling {
  serverAllowOrigins: string
  serverAllowedHosts: string
  serverHost: string
  serverPath: string
  serverPort: string
  transport: string
}
/**
 * Provide persistent memory capabilities through Neo4j graph database integration.
 */
export interface Neo4JMemory {
  database?: string
  neo4jPassword?: string
  serverAllowOrigins?: string
  serverAllowedHosts?: string
  serverHost?: string
  serverPath?: string
  serverPort?: string
  transport?: string
  url: string
  username: string
}
/**
 * MCP server for interacting with Neon Management API and databases.
 */
export interface Neon {
  apiKey: string
}
/**
 * A Node.js–based Model Context Protocol server that spins up disposable Docker containers to execute arbitrary JavaScript.
 */
export interface NodeJsSandbox {}
/**
 * Official Notion MCP Server.
 */
export interface Notion {
  internalIntegrationToken: string
}
/**
 * Seamless interaction with Novita AI platform resources.
 */
export interface Novita {}
/**
 * MCP server that enables intelligent NPM package analysis powered by AI.
 */
export interface NPMSentinel {}
/**
 * MCP server that interacts with Obsidian via the Obsidian rest API community plugin.
 */
export interface Obsidian {
  apiKey: string
}
/**
 * Secure Okta identity and access management via Model Context Protocol (MCP). Access Okta users, groups, applications, logs, and policies through AI assistants with enterprise-grade security.
 */
export interface OktaMCPServer {
  /**
   * Okta organization URL (e.g., https://dev-123456.okta.com)
   */
  clientOrgurl: string
  /**
   * Maximum concurrent requests to Okta API
   */
  concurrentLimit?: string
  /**
   * Logging level for server output
   */
  logLevel?: string
  oktaApiToken?: string
}
/**
 * A Model Context Protocol server for Omi interaction and automation. This server provides tools to read, search, and manipulate Memories and Conversations.
 */
export interface OmiMcp {
  apiKey: string
}
/**
 * ONLYOFFICE DocSpace is a room-based collaborative platform which allows organizing a clear file structure depending on users' needs or project goals.
 */
export interface ONLYOFFICEDocSpace {
  baseUrl: string
  docspaceApiKey: string
  docspaceAuthToken: string
  docspacePassword: string
  docspaceUsername: string
  dynamic: boolean
  origin: string
  toolsets: string
  userAgent: string
}
/**
 * Fetch, validate, and generate code or curl from any OpenAPI or Swagger spec - all from a single URL.
 */
export interface OpenAPIToolkitForMCP {
  mode: string
}
/**
 * OpenAPI Schema Model Context Protocol Server.
 */
export interface OpenAPISchema {
  SchemaPath: string
}
/**
 * MCP Server for searching Airbnb and get listing details.
 */
export interface AirbnbSearch {}
/**
 * Discover and connect to a curated marketplace of MCP servers for extending AI agent capabilities.
 */
export interface OpenMesh {}
/**
 * A simple MCP service that provides current weather and 5-day forecast using the free OpenWeatherMap API.
 */
export interface Openweather {
  owmApiKey: string
}
/**
 * Access to OpenZeppelin Cairo Contracts.
 */
export interface OpenZeppelinCairoContracts {}
/**
 * Access to OpenZeppelin Solidity Contracts.
 */
export interface OpenZeppelinSolidityContracts {}
/**
 * Access to OpenZeppelin Stellar Contracts.
 */
export interface OpenZeppelinStellarContracts {}
/**
 * Access to OpenZeppelin Stylus Contracts.
 */
export interface OpenZeppelinStylusContracts {}
/**
 * Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics.
 */
export interface Opik {
  apiBaseUrl: string
  apiKey: string
  workspaceName: string
}
/**
 * A Model Context Protocol (MCP) server for querying deals and evaluations from the Opine CRM API.
 */
export interface OpineMCPServer {
  opineApiKey: string
}
/**
 * Connect to Oracle databases via MCP, providing secure read-only access with support for schema exploration, query execution, and metadata inspection.
 */
export interface OracleDatabaseMCPServer {
  oracleConnectionString: string
  oracleUser: string
  password: string
}
/**
 * A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.
 */
export interface OSPMarketingTools {}
/**
 * A Model Context Protocol (MCP) server that enables AI assistants like Claude to seamlessly access web data through Oxylabs' powerful web scraping technology.
 */
export interface Oxylabs {
  password?: string
  username: string
}
/**
 * A MCP for searching and downloading academic papers from multiple sources like arXiv, PubMed, bioRxiv, etc.
 */
export interface PaperSearch {}
/**
 * Connector for Perplexity API, to enable real-time, web-wide research.
 */
export interface Perplexity {
  perplexityApiKey: string
}
/**
 * An MCP server to help make U.S. Government open datasets AI-friendly.
 */
export interface ProgramIntegrityAlliance {
  apiKey: string
}
/**
 * Pinecone Assistant MCP server.
 */
export interface PineconeAssistant {
  apiKey: string
  assistantHost: string
}
/**
 * Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More 🔌.
 */
export interface ExecuteAutomationPlaywrightMCP {
  data: string
}
/**
 * A unified MCP proxy that aggregates multiple MCP servers into one interface, enabling seamless tool discovery and management across all your AI interactions. Manage all your MCP servers from a single connection point with RAG capabilities and real-time notifications.
 */
export interface PluggedInMCPProxy {
  /**
   * Base URL for the Plugged.in API (optional, defaults to https://plugged.in for cloud or http://localhost:12005 for self-hosted)
   */
  pluggedinApiBaseUrl: string
  pluggedinApiKey: string
}
/**
 * MCP server for Polar Signals Cloud continuous profiling platform, enabling AI assistants to analyze CPU performance, memory usage, and identify optimization opportunities in production systems.
 */
export interface PolarSignals {
  polarSignalsApiKey: string
}
/**
 * Connect your AI assistant to PomoDash for seamless task and project management.
 */
export interface PomoDash {
  apiKey: string
}
/**
 * Connect with read-only access to PostgreSQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.
 */
export interface PostgreSQLReadonlyArchived {
  url: string
}
/**
 * Postman's MCP server connects AI agents, assistants, and chatbots directly to your APIs on Postman. Use natural language to prompt AI to automate work across your Postman collections, environments, workspaces, and more.
 */
export interface PostmanMCPServer {
  apiKey: string
}
/**
 * Pref Editor is a tool for viewing and editing Android app preferences during development.
 */
export interface PrefEditor {}
/**
 * A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces. Connect to your Prometheus instance to retrieve metrics, perform queries, and gain insights into your system's performance and health.
 */
export interface Prometheus {
  /**
   * The URL of your Prometheus server
   */
  prometheusUrl: string
}
/**
 * Browser automation and web scraping using Puppeteer.
 */
export interface PuppeteerArchived {}
/**
 * Educational Python refactoring assistant that provides guided suggestions for AI assistants.  Features: • Step-by-step refactoring instructions without modifying code • Comprehensive code analysis using professional tools (Rope, Radon, Vulture, Jedi, LibCST, Pyrefly) • Educational approach teaching refactoring patterns through guided practice • Support for both guide-only and apply-changes modes • Identifies long functions, high complexity, dead code, and type issues • Provides precise line numbers and specific refactoring instructions • Compatible with all AI assistants (Claude, GPT, Cursor, Continue, etc.)  Perfect for developers learning refactoring patterns while maintaining full control over code changes. Acts as a refactoring mentor rather than an automated code modifier.
 */
export interface PythonRefactoringAssistant {}
/**
 * The QuantConnect MCP Server is a bridge for AIs (such as Claude and OpenAI o3 Pro) to interact with our cloud platform. When equipped with our MCP, the AI can perform tasks on your behalf through our API such as updating projects, writing strategies, backtesting, and deploying strategies to production live-trading.
 */
export interface QuantConnectMCPServer {
  agentname: string
  quantconnectapitoken: string
  quantconnectuserid: string
}
/**
 * A comprehensive security scanner for MCP servers with YARA rules and static analysis capabilities.
 */
export interface RampartsMCPSecurityScanner {}
/**
 * Razorpay's Official MCP Server.
 */
export interface Razorpay {
  keyId: string
  keySecret?: string
}
/**
 * A comprehensive Model Context Protocol (MCP) server for Reddit integration. This server enables AI agents to interact with Reddit programmatically through a standardized interface.
 */
export interface McpReddit {
  redditClientId: string
  redditClientSecret: string
  redditPassword: string
  username: string
}
/**
 * Access to Redis database operations.
 */
export interface Redis {
  caCerts: string
  caPath: string
  certReqs: string
  clusterMode: boolean
  host: string
  port: number
  pwd: string
  ssl: boolean
  sslCertfile: string
  sslKeyfile: string
  username: string
}
/**
 * MCP Server for Redis Cloud's API, allowing you to manage your Redis Cloud resources using natural language.
 */
export interface RedisCloud {
  apiKey: string
  secretKey?: string
}
/**
 * Ref powerful search tool connets your coding tools with documentation context. It includes an up-to-date index of public documentation and it can ingest your private documentation (eg. GitHub repos, PDFs) as well.
 */
export interface RefUpToDateDocs {
  apiKey: string
}
/**
 * Tools for finding remote MCP servers.
 */
export interface RemoteMCP {}
/**
 * Interact with your Render resources via LLMs.
 */
export interface Render {
  apiKey: string
}
/**
 * Send emails directly from Cursor with this email sending MCP server.
 */
export interface SendEmails {
  apiKey?: string
  /**
   * comma separated list of reply to email addresses
   */
  replyTo: string
  /**
   * sender email address
   */
  sender: string
}
/**
 * RISKEN's official MCP Server.
 */
export interface RISKEN {
  accessToken: string
  url: string
}
/**
 * MCP server that provides container image vulnerability scanning and remediation capabilities through Root.io.
 */
export interface RootIoVulnerabilityRemediationMCP {
  apiAccessToken: string
}
/**
 * Python server implementing Model Context Protocol (MCP) for ROS2.
 */
export interface WiseVisionROS2MCPServer {}
/**
 * Access to Rube's catalog of remote MCP servers.
 */
export interface Rube {
  apiKey: string
}
/**
 * The Rust MCP Filesystem is a high-performance, asynchronous, and lightweight Model Context Protocol (MCP) server built in Rust for secure and efficient filesystem operations. Designed with security in mind, it operates in read-only mode by default and restricts clients from updating allowed directories via MCP Roots unless explicitly enabled, ensuring robust protection against unauthorized access. Leveraging asynchronous I/O, it delivers blazingly fast performance with a minimal resource footprint. Optimized for token efficiency, the Rust MCP Filesystem enables large language models (LLMs) to precisely target searches and edits within specific sections of large files and restrict operations by file size range, making it ideal for efficient file exploration, automation, and system integration.
 */
export interface BlazingFastAsynchronousMCPServerForSeamlessFilesystemOperations {
  /**
   * Enable read/write mode. If false, the app operates in read-only mode.
   */
  allowWrite: boolean
  /**
   * List of directories that rust-mcp-filesystem can access.
   */
  allowedDirectories: string[]
  /**
   * Enable dynamic directory access control via MCP client-side Roots.
   */
  enableRoots: boolean
}
/**
 * The SchemaCrawler AI MCP Server enables natural language interaction with your database schema using an MCP client in "Agent" mode. It allows users to explore tables, columns, foreign keys, triggers, stored procedures and more simply by asking questions like "Explain the code for the interest calculation stored procedure". You can also ask it to help with SQL, since it knows your schema. This is ideal for developers, DBAs, and data analysts who want to streamline schema comprehension and query development without diving into dense documentation.
 */
export interface SchemaCrawlerAI {
  /**
   * --info-level How much database metadata to retrieve
   */
  generalInfoLevel: string
  generalLogLevel?: string
  schcrwlrDatabasePassword?: string
  schcrwlrDatabaseUser?: string
  /**
   * --database Database to connect to (optional)
   */
  serverConnectionDatabase?: string
  /**
   * --host Database host (optional)
   */
  serverConnectionHost?: string
  /**
   * --port Database port (optional)
   */
  serverConnectionPort?: number
  /**
   * --server SchemaCrawler database plugin
   */
  serverConnectionServer: string
  /**
   * --url JDBC URL for database connection
   */
  urlConnectionJdbcUrl: string
  /**
   * Host volume to map within the Docker container
   */
  volumeHostShare: string
}
/**
 * This adds a border to an image and returns base64 encoded image.
 */
export interface SchoginiMCPImageBorder {}
/**
 * ScapeGraph MCP Server.
 */
export interface ScrapeGraph {
  sgaiApiKey: string
}
/**
 * A Model Context Protocol server for Scrapezy that enables AI models to extract structured data from websites.
 */
export interface Scrapezy {
  apiKey: string
}
/**
 * SecureNote.link MCP Server - allowing AI agents to securely share sensitive information through end-to-end encrypted notes.
 */
export interface SecurenoteLinkMcpServer {}
/**
 * MCP server for using Semgrep to scan code for security vulnerabilities.
 */
export interface Semgrep {}
/**
 * A Model Context Protocol server for retrieving and analyzing issues from Sentry.io. This server provides tools to inspect error reports, stacktraces, and other debugging information from your Sentry account.
 */
export interface SentryArchived {
  authToken: string
}
/**
 * Stop stitching context for Copilot and Cursor. With Sequa MCP, your AI tools know your entire codebase and docs out of the box.
 */
export interface SequaAI {
  apiKey: string
  mcpServerUrl: string
}
/**
 * Dynamic and reflective problem-solving through thought sequences.
 */
export interface SequentialThinkingReference {}
/**
 * Access to Short.io's link shortener and analytics tools.
 */
export interface ShortIo {
  shortIoApiKey: string
}
/**
 * Advanced SimpleCheckList with MCP server and SQLite database for comprehensive task management.  Features: • Complete project and task management system • Hierarchical organization (Projects → Groups → Task Lists → Tasks → Subtasks) • SQLite database for data persistence • RESTful API with comprehensive endpoints • MCP protocol compliance for AI assistant integration • Docker-optimized deployment with stability improvements  **v1.0.1 Update**: Enhanced Docker stability with improved container lifecycle management. Default mode optimized for containerized deployment with reliable startup and shutdown processes.  Perfect for AI assistants managing complex project workflows and task hierarchies.
 */
export interface SimpleCheckListMCPServer {}
/**
 * MCP server for interacting with SingleStore Management API and services.
 */
export interface Singlestore {
  mcpApiKey: string
}
/**
 * Interact with Slack Workspaces over the Slack API.
 */
export interface SlackArchived {
  botToken?: string
  channelIds?: string
  teamId: string
}
/**
 * MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.
 */
export interface SmartBearMCPServer {
  apiHubApiKey: string
  bugsnagApiKey: string
  bugsnagAuthToken: string
  bugsnagEndpoint: string
  pactBrokerBaseUrl: string
  pactBrokerPassword: string
  pactBrokerToken: string
  pactBrokerUsername: string
  reflectApiToken: string
}
/**
 * Interact with SonarQube Cloud, Server and Community build over the web API. Analyze code to identify quality and security issues.
 */
export interface SonarQube {
  /**
   * Organization key for SonarQube Cloud, not required for SonarQube Server or Community Build
   */
  org: string
  token: string
  /**
   * URL of the SonarQube instance, to provide only for SonarQube Server or Community Build
   */
  url: string
}
/**
 * Database interaction and business intelligence capabilities.
 */
export interface SQLiteArchived {}
/**
 * AI-powered DevOps assistant for managing cloud infrastructure and applications.
 */
export interface StackGen {
  token?: string
  /**
   * URL of your StackGen instance
   */
  url: string
}
/**
 * A Model Context Protocol (MCP) server for integrating with StackHawk's security scanning platform. Provides security analytics, YAML configuration management, sensitive data/threat surface analysis, and anti-hallucination tools for LLMs.
 */
export interface StackHawk {
  apiKey: string
}
/**
 * Interact with Stripe services over the Stripe API.
 */
export interface Stripe {
  secretKey: string
}
/**
 * Official Supadata MCP Server - Adds powerful video & web scraping to Cursor, Claude and any other LLM clients.
 */
export interface Supadata {
  apiKey: string
}
/**
 * MCP Server to interact with a SuzieQ network observability instance via its REST API.
 */
export interface SuzieqMCP {
  apiEndpoint: string
  apiKey: string
}
/**
 * Model Context Protocol (MCP) server for comprehensive task and feature management, providing AI assistants with a structured, context-efficient way to interact with project data.
 */
export interface TaskOrchestrator {}
/**
 * The Tavily MCP server provides seamless interaction with the tavily-search and tavily-extract tools, real-time web search capabilities through the tavily-search tool and Intelligent data extraction from web pages via the tavily-extract tool.
 */
export interface Tavily {
  apiKey: string
}
/**
 * Tools for Teamwork.com products.
 */
export interface Teamwork {
  twMcpBearerToken: string
}
/**
 * Enables interaction with powerful telephony, messaging, and AI assistant APIs.
 */
export interface Telnyx {
  apiKey: string
}
/**
 * MCP server for Tembo Cloud's platform API.
 */
export interface Tembo {
  apiKey: string
}
/**
 * The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.
 */
export interface HashicorpTerraform {}
/**
 * Transform natural language queries into GraphQL queries using an AI agent. Provides schema management, query validation, execution, and history tracking.
 */
export interface TextToGraphQL {
  graphqlApiKey: string
  /**
   * Authentication method for GraphQL API
   */
  graphqlAuthType: string
  graphqlEndpoint: string
  /**
   * OpenAI model to use
   */
  modelName: string
  /**
   * Model temperature for responses
   */
  modelTemperature: number
  openaiApiKey: string
}
/**
 * Tigris is a globally distributed S3-compatible object storage service that provides low latency anywhere in the world, enabling developers to store and access any amount of data for a wide range of use cases.
 */
export interface TigrisData {
  awsAccessKeyId: string
  awsEndpointUrlS3: string
  awsSecretAccessKey?: string
}
/**
 * Time and timezone conversion capabilities.
 */
export interface TimeReference {}
/**
 * Triplewhale MCP Server.
 */
export interface Triplewhale {
  apiKey: string
}
/**
 * A comprehensive Model Context Protocol (MCP) server that enables AI assistants to control Unreal Engine via Remote Control API. Built with TypeScript and designed for game development automation.
 */
export interface UnrealEngineMCPServer {
  /**
   * Logging level
   */
  logLevel?: string
  /**
   * Unreal Engine host address. Use: host.docker.internal for local UE on Windows/Mac Docker, 127.0.0.1 for Linux without Docker, or actual IP address (e.g., 192.168.1.100) for remote UE
   */
  ueHost: string
  /**
   * Remote Control HTTP port
   */
  ueRcHttpPort: string
  /**
   * Remote Control WebSocket port
   */
  ueRcWsPort: string
}
/**
 * VeyraX MCP is the only connection you need to access all your tools in any MCP-compatible environment.
 */
export interface VeyraX {
  apiKey: string
}
/**
 * provides tools and templates to create a functioning Vizro chart or dashboard step by step.
 */
export interface Vizro {}
/**
 * This MCP server exposes tools to query the NVD/CVE REST API and return formatted text results suitable for LLM consumption via the MCP protocol. It includes automatic query chunking for large date ranges and parallel processing for improved performance.
 */
export interface VulnNistMcpServer {}
/**
 * Wayfound’s MCP server allows business users to govern, supervise, and improve AI Agents.
 */
export interface WayfoundMCP {
  mcpApiKey: string
}
/**
 * Model Context Protocol (MCP) server for the Webflow Data API.
 */
export interface Webflow {
  token: string
}
/**
 * A Model Context Protocol (MCP) server that retrieves information from Wikipedia to provide context to LLMs.
 */
export interface Wikipedia {}
/**
 * Connect your chat repl to wolfram alpha computational intelligence.
 */
export interface WolframAlpha {
  wolframApiKey: string
}
/**
 * Retrieves transcripts for given YouTube video URLs.
 */
export interface YouTubeTranscripts {}
/**
 * MCP server for Zerodha Kite Connect API - India's leading stock broker trading platform. Execute trades, manage portfolios, and access real-time market data for NSE, BSE, and other Indian exchanges.
 */
export interface ZerodhaKiteConnect {
  /**
   * Access token obtained after OAuth authentication (optional - can be generated at runtime)
   */
  kiteAccessToken?: string
  /**
   * Your Kite Connect API key from the developer console
   */
  kiteApiKey: string
  kiteApiSecret?: string
  /**
   * OAuth redirect URL configured in your Kite Connect app
   */
  kiteRedirectUrl?: string
}
